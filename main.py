#Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
#Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
#Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества.
#Затем пользователь вводит сами элементы множеств.
from random import randint

'''
n1 = {randint(1, 26) for i in range(int(input("Введите кол-во чисел в первом мн-ве ")))}
n2 = {randint(1, 26) for i in range(int(input("Введите кол-во чисел во втором мн-ве ")))}
#print(n1, n2)
print(*sorted(n1.intersection(n2)))
'''

#  Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке, причём кусты высажены
#  только по окружности. Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
#  Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте
#  выросло ai ягод.
#  В этом фермерском хозяйстве внедрена система автоматического сбора черники.
#  Эта система состоит из управляющего модуля и нескольких собирающих модулей. Собирающий модуль за один заход,
#  находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
#  Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль,
#  находясь перед некоторым кустом заданной во входном файле грядки.


s = [randint(1, 5) for i in range(5)]#int(input('Введите количество кустов ')))]
print(s)
count = len(s)
max_k = 0
max_i = 0
for i in range(count):
    if s[i] + s[(i - 1) % count] + s[(i + 1) % count] > max_k:
        max_k = s[i] + s[(i - 1) % count] + s[(i + 1) % count]
        max_i = i
print(f'Максимальное количество ягод: {max_k}; собирающий модуль перед кустом номер: {max_i + 1} (нумерация с 1)')
